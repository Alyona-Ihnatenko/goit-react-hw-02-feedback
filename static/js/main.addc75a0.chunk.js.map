{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css","Components/Feedback/Feedback.module.css","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notification.jsx","Components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","css","btnList","map","option","btnItem","button","type","onClick","Section","title","children","section","sectionTitle","Statistics","good","neutral","bad","total","positivePercentage","statistics","statList","statItem","text","description","Notification","message","Feedback","state","handleButtonClick","event","setState","prevState","countTotalFeedback","Object","keys","reduce","acc","value","Math","floor","this","countPositiveFeedbackPercentage","wrapper","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.addc75a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__U2a88\",\"statList\":\"Statistics_statList__3zgMq\",\"statItem\":\"Statistics_statItem__1hMTR\",\"text\":\"Statistics_text__3GYb9\",\"description\":\"Statistics_description__3g_7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnList\":\"FeedbackOptions_btnList__1wQYP\",\"btnItem\":\"FeedbackOptions_btnItem__3W4W_\",\"button\":\"FeedbackOptions_button__3Xvcj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__3ieRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3c6Zc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Feedback_wrapper__2bCDr\"};","import PropTypes from 'prop-types';\nimport css from './FeedbackOptions.module.css';\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={css.btnList}>\n      {options.map(option => (\n        <li className={css.btnItem} key={option}>\n          <button\n            className={css.button}\n            type=\"button\"\n            onClick={() => {\n              onLeaveFeedback(option);\n            }}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport { FeedbackOptions };\n","import PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={css.section}>\n      <h2 className={css.sectionTitle}>{title}</h2>\n      {children}\n    </section>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\nexport { Section };\n","import PropTypes from 'prop-types';\nimport css from '../Statistics/Statistics.module.css';\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div className={css.statistics}>\n      <ul className={css.statList}>\n        <li className={css.statItem}>\n          <p className={css.text}>Good:</p>\n          <span className={css.description}>{good}</span>\n        </li>\n\n        <li className={css.statItem}>\n          <p className={css.text}>Neutral:</p>\n          <span className={css.description}>{neutral}</span>\n        </li>\n\n        <li className={css.statItem}>\n          <p className={css.text}>Bad:</p>\n          <span className={css.description}>{bad}</span>\n        </li>\n\n        <li className={css.statItem}>\n          <p className={css.text}>Total:</p>\n          <span className={css.description}>{total}</span>\n        </li>\n\n        <li className={css.statItem}>\n          <p className={css.text}>Positiv feedback:</p>\n          <span className={css.description}>{positivePercentage} %</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\nexport { Statistics };\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport css from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={css.title}>{message}</p>;\n}\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport { Notification };\n","import React, { Component } from 'react';\nimport { FeedbackOptions } from '../FeedbackOptions/FeedbackOptions';\nimport { Section } from '../Section/Section';\nimport { Statistics } from '../Statistics/Statistics';\nimport { Notification } from '../Notification/Notification';\nimport css from './Feedback.module.css';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleButtonClick = event => {\n    this.setState(prevState => ({\n      [event]: prevState[event] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.keys(this.state).reduce(\n      (acc, value) => acc + this.state[value],\n      0,\n    );\n  };\n  countPositiveFeedbackPercentage() {\n    const persent = Math.floor(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n    return persent || 0;\n  }\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const options = Object.keys(this.state);\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className={css.wrapper}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleButtonClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport { Feedback };\n","import './App.css';\nimport { Feedback } from './Components/Feedback/Feedback';\n\nfunction App() {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}